{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Header/index.js","TasksSection/styled.js","TasksSection/index.js","TasksContainer/styled.js","TasksContainer/index.js","TasksHeader/index.js","Container/styled.js","Container/index.js","GlobalStyles.js","App.js","useTasks.js","serviceWorker.js","index.js"],"names":["FormContainer","styled","form","FormHeader","h2","FormMainContent","div","FormInput","input","FormSubmitButton","button","Form","addNewTask","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onSubmit","event","preventDefault","trimmedNewTaskContent","trim","current","focus","ref","value","onChange","target","autoFocus","placeholder","List","ul","Item","li","hidden","css","Content","span","done","DoneButton","RemoveButton","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","key","id","onClick","content","ButtonContainer","Button","Buttons","toggleHideDone","setAllDone","length","disabled","every","Header","title","StyledTasksSection","TasksSection","children","StyledTasksContainer","TasksContainer","TasksHeader","Main","Container","GlobalStyles","createGlobalStyle","App","setHideDone","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","filter","useTasks","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.82244d68.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const FormContainer = styled.form`\r\n  background-color: white;\r\n`;\r\n\r\nexport const FormHeader = styled.h2`\r\n  padding: 20px;\r\n  margin: 0;\r\n\r\n  @media (max-width: 767px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const FormMainContent = styled.div`\r\n  padding: 20px;\r\n  border-top: 2px solid #e8e8e8;\r\n  display: flex;\r\n\r\n  @media (max-width: 767px) {\r\n    flex-direction: column;\r\n    flex-basis: 100%;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  padding: 10px;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin-right: 20px;\r\n  flex-grow: 1;\r\n  border: 2px solid #e8e8e8;\r\n\r\n  &:placeholder {\r\n    color: hsl(0, 0%, 75%);\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    max-width: unset;\r\n  }\r\n`;\r\n\r\nexport const FormSubmitButton = styled.button`\r\n  padding: 10px;\r\n  background-color: hsl(180, 100%, 25%);\r\n  color: hsl(179, 58%, 88%);\r\n  font-weight: 300;\r\n  border: none;\r\n  transition: background-color 1s, transform 0.3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: hsl(180, 100%, 35%);\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { useState, useRef } from \"react\";\r\nimport {\r\n  FormContainer,\r\n  FormHeader,\r\n  FormMainContent,\r\n  FormInput,\r\n  FormSubmitButton,\r\n} from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const focusInput = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const trimmedNewTaskContent = newTaskContent.trim();\r\n\r\n    if (!trimmedNewTaskContent) {\r\n      return;\r\n    }\r\n\r\n    addNewTask(trimmedNewTaskContent);\r\n    setNewTaskContent(\"\");\r\n\r\n    focusInput();\r\n  };\r\n\r\n  return (\r\n    <FormContainer onSubmit={onFormSubmit}>\r\n      <FormHeader>Dodaj nowe zadanie</FormHeader>\r\n      <FormMainContent>\r\n        <FormInput\r\n          ref={inputRef}\r\n          value={newTaskContent}\r\n          onChange={({ target }) => setNewTaskContent(target.value)}\r\n          autoFocus\r\n          placeholder=\"Co jest do zrobienia?\"\r\n        />\r\n        <FormSubmitButton>Dodaj zadanie</FormSubmitButton>\r\n      </FormMainContent>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  padding: 20px;\r\n  margin-top: 25px;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  padding: 10px;\r\n  border-bottom: 2px solid #e8e8e8;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ hidden }) =>\r\n    hidden &&\r\n    css`\r\n      display: none;\r\n    `}\r\n`;\r\n\r\nexport const Content = styled.span`\r\n  flex-grow: 1;\r\n  margin: 0 10px;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\nexport const DoneButton = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  background-color: green;\r\n  border: none;\r\n  color: green;\r\n  flex-shrink: 0;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    css`\r\n      color: white;\r\n    `}\r\n`;\r\n\r\nexport const RemoveButton = styled.button`\r\n  height: 30px;\r\n  width: 30px;\r\n  background-color: red;\r\n  border: none;\r\n  color: white;\r\n  flex-shrink: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { List, Item, Content, DoneButton, RemoveButton } from \"./styled\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <List>\r\n    {tasks.map((task) => (\r\n      <Item key={task.id} hidden={task.done && hideDone}>\r\n        <DoneButton\r\n          onClick={() => toggleTaskDone(task.id)}\r\n          done={task.done}\r\n        >\r\n          âœ”\r\n        </DoneButton>\r\n        <Content done={task.done}>{task.content}</Content>\r\n        <RemoveButton onClick={() => removeTask(task.id)}>\r\n          ðŸ—‘\r\n        </RemoveButton>\r\n      </Item>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default Tasks;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ButtonContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 20px;\r\n  color: teal;\r\n  transition: color 0.3s;\r\n\r\n  &:hover {\r\n    color: hsl(180, 100%, 35%);\r\n  }\r\n\r\n  &:active {\r\n    color: hsl(180, 100%, 50%);\r\n  }\r\n\r\n  &:disabled {\r\n    color: #ccc;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ButtonContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) =>\r\n  tasks.length > 0 && (\r\n    <ButtonContainer>\r\n      <Button\r\n        onClick={toggleHideDone}\r\n      >\r\n        {hideDone ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n      </Button>\r\n      <Button\r\n        onClick={setAllDone}\r\n        disabled={tasks.every(({ done }) => done)}\r\n      >\r\n        UkoÅ„cz wszystkie\r\n      </Button>\r\n    </ButtonContainer>\r\n  );\r\n\r\nexport default Buttons;\r\n","import React from 'react';\r\n\r\nconst Header = ({title}) => (\r\n    <h1>{title}</h1>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledTasksSection = styled.div`\r\n  background-color: white;\r\n  margin-top: 10px;\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { StyledTasksSection } from \"./styled\";\r\n\r\nconst TasksSection = ({ children }) => (\r\n  <StyledTasksSection>{children}</StyledTasksSection>\r\n);\r\n\r\nexport default TasksSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTasksContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr auto;\r\n  border-bottom: 2px solid #e8e8e8;\r\n  padding: 20px;\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: 1fr;\r\n    padding-bottom: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledTasksContainer } from \"./styled\";\r\n\r\nconst TasksContainer = ({ children }) => (\r\n  <StyledTasksContainer>\r\n      {children}\r\n  </StyledTasksContainer>\r\n);\r\n\r\nexport default TasksContainer;\r\n","import React from 'react';\r\n\r\nconst TasksHeader = ({title}) => (\r\n    <h2>{title}</h2>\r\n);\r\n\r\nexport default TasksHeader;","import styled from \"styled-components\";\r\n\r\nexport const Main = styled.div`\r\n  margin: 10vh auto;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n`;\r\n","import React from 'react';\r\nimport {Main} from \"./styled\";\r\n\r\nconst Container = ({children}) => (\r\n    <Main>\r\n        {children}\r\n    </Main>\r\n);\r\n\r\nexport default Container;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n    ::after,\r\n    ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    padding: 20px;\r\n    font-family: \"Montserrat\", sans-serif;\r\n    background-color: #efefef;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Header from \"./Header\";\nimport TasksSection from \"./TasksSection\";\nimport TasksContainer from \"./TasksContainer\";\nimport TasksHeader from \"./TasksHeader\";\nimport Container from \"./Container\";\nimport { GlobalStyles } from \"./GlobalStyles\";\nimport { useTasks } from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toggleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toggleTaskDone,\n    setAllDone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <GlobalStyles />\n      <Header title=\"Lista zadaÅ„\" />\n      <Form addNewTask={addNewTask} />\n      <TasksSection>\n        <TasksContainer>\n          <TasksHeader title=\"Lista zadaÅ„\" />\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />\n        </TasksContainer>\n        <Tasks\n          tasks={tasks}\n          hideDone={hideDone}\n          removeTask={removeTask}\n          toggleTaskDone={toggleTaskDone}\n        />\n      </TasksSection>\n    </Container>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useTasks = () => {\r\n  const [tasks, setTasks] = useState(\r\n    JSON.parse(localStorage.getItem(\"tasks\")) || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const removeTask = (id) => {\r\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => {\r\n        if (task.id === id) {\r\n          return { ...task, done: !task.done };\r\n        }\r\n\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  const setAllDone = () => {\r\n    setTasks((tasks) =>\r\n      tasks.map((task) => ({\r\n        ...task,\r\n        done: true,\r\n      }))\r\n    );\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks((tasks) => [\r\n      ...tasks,\r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return {\r\n    tasks,\r\n    removeTask,\r\n    toggleTaskDone,\r\n    setAllDone,\r\n    addNewTask,\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}